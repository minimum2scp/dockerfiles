version: 2
jobs:
  build:
    working_directory: /tmp/dockerfiles

    docker:
      - image: circleci/ruby:2.4.1

    steps:
      - run:
          name: Check ruby version
          command: |
            set -x
            ruby -v
            gem env
            bundle version

      - checkout

      - setup_remote_docker

      - run:
          name: Check docker version
          command: |
            set -x
            docker version
            docker info

      - run:
          name: Install java
          command: |
            set -x
            echo "deb http://deb.debian.org/debian jessie-backports main" | sudo tee /etc/apt/sources.list.d/jessie-backports.list
            sudo apt-get update
            sudo apt-get install openjdk-8-jre-headless -t jessie-backports -y --no-install-recommends

      - run:
          name: Install digdag
          command: |
            set -x
            sudo curl -o /usr/local/bin/digdag -L "https://dl.digdag.io/digdag-0.9.12"
            sudo chmod +x /usr/local/bin/digdag

      - run: digdag --version
      - run: digdag check

      - restore_cache:
          keys:
            - acng-cache-{{ .Branch }}
            - acng-cache-master

      - run:
          name: Run apt-cacher-ng
          command: |
            set -x
            docker run -d --name acng minimum2scp/apt-cacher-ng:latest
            if [ -d .circleci/cache/acng/apt-cacher-ng/ ]; then
              docker exec -t acng service apt-cacher-ng stop
              docker cp .circleci/cache/acng/apt-cacher-ng/ acng:/var/cache/apt-cacher-ng/
              docker exec -t acng chown -R apt-cacher-ng:apt-cacher-ng /var/cache/apt-cacher-ng/
              docker exec -t acng service apt-cacher-ng start
            else
              mkdir -p .circleci/cache/acng/
            fi

      - run:
          name: Check apt-cacher-ng
          command: |
            set -x
            acng_uri=http://$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' acng):3142
            echo "http_proxy=${acng_uri}"
            docker run --rm --entrypoint=/bin/sh minimum2scp/apt-cacher-ng:latest -c "curl ${acng_uri}/acng-report.html"

      - run:
          name: Build images
          command: |
            set -x
            acng_uri=http://$(docker inspect -f '{{ .NetworkSettings.IPAddress }}' acng):3142
            digdag run ci-build.dig -p acng_uri=${acng_uri} --rerun

      - run:
          name: Stop apt-cacher-ng
          command: |
            set -x
            docker stop acng
            docker cp acng:/var/cache/apt-cacher-ng/ .circleci/cache/acng/apt-cacher-ng/

      - save_cache:
          key: acng-cache-{{ .Branch }}-{{ epoch }}
          paths:
            - .circleci/cache/acng/

      - run:
          name: Setup rspec-runner environment variables and volumes
          command: |
            printenv | sort | grep -Ev '^(DOCKER_CERT_PATH|CIRCLE_BUILD_TOKEN)=' | grep -E '^(CI=|CIRCLECI=|CIRCLE_|DOCKER_)' > .circleci/env
            echo "DOCKER_CERT_PATH=/data/$(basename ${DOCKER_CERT_PATH})" >> .circleci/env
            docker volume create data
            docker create --name cfg -v data:/data minimum2scp/rspec-runner:ci
            docker cp ${DOCKER_CERT_PATH} cfg:/data
            docker rm cfg

      - run: docker run --rm -t --env-file .circleci/env -v data:/data minimum2scp/rspec-runner:ci bundle exec rspec

      - store_artifacts:
          path: .circleci/log/
          destination: log

