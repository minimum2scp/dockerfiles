require 'tmpdir'
require 'logger'
require 'webrick/httpauth/htpasswd'
require 'bundler/setup'
require 'sequel'

logger = Logger.new($stdout)

namespace :"magellan-proxy" do
  desc "install magellan-proxy"
  task :install do
    Dir.mktmpdir do |dir|
      cd dir, verbose: true
      sh "curl -LO https://github.com/groovenauts/magellan-proxy/releases/download/v0.0.2.pre/magellan-proxy-0.0.2.pre-linux_amd64.zip"
      sh "unzip -x magellan-proxy-0.0.2.pre-linux_amd64.zip"
      sh "install -m 755 -o root -g root -p magellan-proxy /usr/local/bin/magellan-proxy"
    end
  end
end

namespace :db do
  desc "create database by environment variable DATABASE_URL"
  task :create do
    opts = Sequel.connect(ENV['DATABASE_URL']).opts
    opts.delete(:uri)
    dbname = opts.delete(:database)
    logger.info "Connect to #{opts.inspect}"
    Sequel.connect(opts, loggers: [logger])["CREATE DATABASE IF NOT EXISTS #{dbname}"].all
  end
end

namespace :htpasswd do
  desc "create .htpasswd by environment variable TDIARY_BASIC_AUTH_USERNAME, TDIARY_BASIC_AUTH_PASSWORD"
  task :create do
    htpasswd = WEBrick::HTTPAuth::Htpasswd.new('.htpasswd')
    htpasswd.set_passwd(nil, ENV['TDIARY_BASIC_AUTH_USERNAME'], ENV['TDIARY_BASIC_AUTH_PASSWORD'])
    htpasswd.flush
    logger.info "created .htaccess"
  end
end

